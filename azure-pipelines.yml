trigger:
- master

stages:
  - stage: build
    jobs:
      - job: Build
        pool:
          vmImage: 'windows-latest'

        variables:
          - group: Invisionware.Core
          - name: solution
            value: '**/*.sln'
          - name: buildPlatform
            value: 'Any CPU'
          - name: buildConfiguration
            value: 'Release'
          - name: buildTarget
            value: 'Nuget-Package'
        steps:
          - task: NuGetToolInstaller@1
            displayName: 'Install Nuget Tools'

          - task: NuGetCommand@2
            displayName: 'Restore nuget packages'
            inputs:
              restoreSolution: '$(solution)'

          - task: replacetokens@3
            displayName: 'Transform appsetings.json'
            inputs:
              rootDirectory: '$(Build.SourcesDirectory)/tests'
              targetFiles: '**/appSettings.json'
              encoding: 'auto'
              writeBOM: true
              escapeType: 'json'
              verbosity: 'detailed'
              actionOnMissing: 'warn'
              keepToken: false
              tokenPrefix: '#{'
              tokenSuffix: '}#'

          - task: Cake@0
            displayName: 'Build Solution: Cake'
            inputs:
              script: 'build.cake'
              target: '$(buildTarget)'
              verbosity: 'Verbose'
              arguments: '-NugetArtifactsPath=$(Build.ArtifactStagingDirectory) -configuration=$(buildConfiguration)' 

          - task: PublishTestResults@2
            displayName: 'Unit Tests: Publish results'
            enabled: true
            inputs:
              testResultsFormat: 'VSTest'
              testResultsFiles: '$(Build.SourcesDirectory)/artifacts/tests/**/*.trx'
              mergeTestResults: true
              failTaskOnFailedTests: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifacts'
            enabled: true
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
      
  - stage: nuget_deploy  
    jobs:
      - deployment: nuget_deploy
        pool: 
          vmImage: 'windows-latest'
        environment: nuget        
        strategy:        
          runOnce:          
            deploy:            
              steps:
                - task: NuGetCommand@2
                  inputs:
                    command: 'push'
                    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
                    nuGetFeedType: 'external'
                    publishFeedCredentials: 'Github Connection'
